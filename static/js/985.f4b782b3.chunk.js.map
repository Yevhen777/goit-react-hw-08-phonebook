{"version":3,"file":"static/js/985.f4b782b3.chunk.js","mappings":"yMA4EA,UAvEqB,WACnB,IAAMA,GAAWC,EAAAA,EAAAA,MAQjB,OACE,0BACE,SAAC,KAAD,CACEC,cAAe,CACbC,KAAM,GACNC,MAAO,GACPC,SAAU,IAEZC,UAAWC,EAAAA,EAAAA,aACXC,SAfe,SAACC,EAAGC,GACvBV,GAASW,EAAAA,EAAAA,IAASF,IAElBC,EAAQE,aAKN,UASE,UAAC,KAAD,CAAMN,UAAWC,EAAAA,EAAAA,aAAoBM,aAAa,MAAlD,WACE,mBAAOP,UAAWC,EAAAA,EAAAA,cAAqBO,QAAQ,OAA/C,kBAEE,SAAC,KAAD,CACER,UAAWC,EAAAA,EAAAA,kBACXQ,KAAK,OACLC,GAAG,OACHb,KAAK,UAEP,SAAC,KAAD,CAAcc,UAAU,MAAMX,UAAWC,EAAAA,EAAAA,MAAaJ,KAAK,aAG7D,mBAAOG,UAAWC,EAAAA,EAAAA,cAAqBO,QAAQ,QAA/C,mBAEE,SAAC,KAAD,CACER,UAAWC,EAAAA,EAAAA,mBACXQ,KAAK,OACLC,GAAG,QACHb,KAAK,WAEP,SAAC,KAAD,CACEc,UAAU,MACVX,UAAWC,EAAAA,EAAAA,MACXJ,KAAK,cAIT,mBAAOG,UAAWC,EAAAA,EAAAA,cAAqBO,QAAQ,WAA/C,sBAEE,SAAC,KAAD,CACER,UAAWC,EAAAA,EAAAA,cACXQ,KAAK,OACLC,GAAG,WACHb,KAAK,cAEP,SAAC,KAAD,CACEc,UAAU,MACVX,UAAWC,EAAAA,EAAAA,MACXJ,KAAK,iBAIT,mBAAQG,UAAWC,EAAAA,EAAAA,eAAsBQ,KAAK,SAA9C","sources":["pages/RegisterUser.jsx"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { register } from '../redux/requestUser';\nimport style from '../components/ContactForm.module.css';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\n\nconst RegisterUser = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (e, actions) => {\n    dispatch(register(e));\n\n    actions.resetForm();\n  };\n\n  return (\n    <div>\n      <Formik\n        initialValues={{\n          name: '',\n          email: '',\n          password: '',\n        }}\n        className={style.registerForm}\n        onSubmit={handleSubmit}\n      >\n        <Form className={style.registerForm} autoComplete=\"off\">\n          <label className={style.registerLabel} htmlFor=\"user\">\n            Name\n            <Field\n              className={style.registerInputName}\n              type=\"text\"\n              id=\"name\"\n              name=\"name\"\n            />\n            <ErrorMessage component=\"div\" className={style.error} name=\"name\" />\n          </label>\n\n          <label className={style.registerLabel} htmlFor=\"email\">\n            Email\n            <Field\n              className={style.registerInputEmail}\n              type=\"text\"\n              id=\"email\"\n              name=\"email\"\n            />\n            <ErrorMessage\n              component=\"div\"\n              className={style.error}\n              name=\"email\"\n            />\n          </label>\n\n          <label className={style.registerLabel} htmlFor=\"password\">\n            Password\n            <Field\n              className={style.registerInput}\n              type=\"text\"\n              id=\"password\"\n              name=\"password\"\n            />\n            <ErrorMessage\n              component=\"div\"\n              className={style.error}\n              name=\"password\"\n            />\n          </label>\n\n          <button className={style.registerButton} type=\"submit\">\n            Register\n          </button>\n        </Form>\n      </Formik>\n    </div>\n  );\n};\n\nexport default RegisterUser;\n"],"names":["dispatch","useDispatch","initialValues","name","email","password","className","style","onSubmit","e","actions","register","resetForm","autoComplete","htmlFor","type","id","component"],"sourceRoot":""}