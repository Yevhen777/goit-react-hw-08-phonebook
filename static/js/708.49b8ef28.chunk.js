"use strict";(self.webpackChunkgoit_react_hw_08_phonebook=self.webpackChunkgoit_react_hw_08_phonebook||[]).push([[708],{2708:function(e,n,t){t.r(n),t.d(n,{default:function(){return v}});var a=t(5861),r=t(885),s=t(7757),i=t.n(s),c=t(2791),l=t(2007),o=t.n(l),u=t(6174),m=t(3284),d=t(5705),h=t(184),p=m.Ry().shape({name:m.Z_().min(2).matches(/^[aA-zZ\s]+$/,"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan").required(),number:m.Rx().min(7).required()}),x=function(e){var n=e.handleSubmit,t=e.initialValues;return(0,h.jsx)(d.J9,{initialValues:t,onSubmit:n,validationSchema:p,children:(0,h.jsxs)(d.l0,{className:u.Z.form,autoComplete:"off",children:[(0,h.jsxs)("label",{children:[(0,h.jsx)("h3",{children:"Name"}),(0,h.jsx)(d.gN,{className:u.Z.input,type:"text",name:"name",pattern:"^[a-zA-Z\u0430-\u044f\u0410-\u042f]+(([' -][a-zA-Z\u0430-\u044f\u0410-\u042f ])?[a-zA-Z\u0430-\u044f\u0410-\u042f]*)*$",title:"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan"}),(0,h.jsx)(d.Bc,{component:"div",className:u.Z.error,name:"name"})]}),(0,h.jsxs)("label",{children:[(0,h.jsx)("h3",{children:"Number"}),(0,h.jsx)(d.gN,{className:u.Z.input,type:"tel",name:"number",pattern:"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}",title:"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +"}),(0,h.jsx)(d.Bc,{component:"div",className:u.Z.error,name:"number"})]}),(0,h.jsx)("button",{className:u.Z.button,type:"submit",children:"Add contact"})]})})},b=t(5984),f=function(e){var n=e.filter,t=e.changeFilter;return(0,h.jsxs)(h.Fragment,{children:[(0,h.jsx)("h3",{children:"Find contacts by name"}),(0,h.jsx)("input",{className:u.Z.input,id:(0,b.x0)(),type:"text",name:"filter",pattern:"^[a-zA-Z\u0430-\u044f\u0410-\u042f]+(([' -][a-zA-Z\u0430-\u044f\u0410-\u042f ])?[a-zA-Z\u0430-\u044f\u0410-\u042f]*)*$",required:!0,value:n,onChange:function(e){return t(e.target.value)}})]})},j=t(706),Z=function(e){var n=e.visibleContacts,t=(0,j.Nt)(),a=(0,r.Z)(t,1)[0],s=(0,j.wY)().data;return(0,h.jsx)("ul",{children:s&&(0,h.jsx)(h.Fragment,{children:n.map((function(e){return(0,h.jsxs)("li",{className:u.Z.addContact,children:[e.name,": ",e.number,(0,h.jsx)("button",{className:u.Z.btn,onClick:function(){return a(e.id)},type:"button",children:"Delete"})]},(0,b.x0)())}))})})};x.propTypes={initialValues:o().object,handleSubmit:o().func},f.propTypes={contact:o().array,filterState:o().string,handleFilter:o().func},Z.propTypes={deleteContact:o().func};var v=function(){var e=(0,c.useState)(""),n=(0,r.Z)(e,1)[0],t=(0,c.useState)(""),s=(0,r.Z)(t,1)[0],l=(0,c.useState)(""),o=(0,r.Z)(l,2),m=o[0],d=o[1],p=(0,j.wY)().data,b=(0,j.Lr)(),v=(0,r.Z)(b,1)[0],y=function(){var e=(0,a.Z)(i().mark((function e(n,t){var a;return i().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,p.find((function(e){return e.name===n.name}));case 2:if(!e.sent){e.next=6;break}return alert("".concat(n.name," is already in contacs")),t.resetForm(),e.abrupt("return");case 6:return a={name:n.name,number:n.number},e.next=9,v(a);case 9:t.resetForm();case 10:case"end":return e.stop()}}),e)})));return function(n,t){return e.apply(this,arguments)}}(),N=p?p.filter((function(e){return e.name.toLowerCase().includes(m.toLowerCase())})):p;return(0,h.jsx)(h.Fragment,{children:(0,h.jsxs)("div",{className:u.Z.allForm,children:[(0,h.jsx)("h1",{children:"Phonebook"}),(0,h.jsx)(x,{initialValues:{items:p,name:n,number:s,filter:m},handleSubmit:y}),(0,h.jsx)("h2",{children:"Contacts"}),(0,h.jsx)(f,{contact:p,filter:m,changeFilter:function(e){d(e)}}),p&&(0,h.jsx)(Z,{visibleContacts:N})]})})}}}]);
//# sourceMappingURL=708.49b8ef28.chunk.js.map